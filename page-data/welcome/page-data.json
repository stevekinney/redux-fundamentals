{"componentChunkName":"component---src-templates-lesson-template-js","path":"/welcome","result":{"data":{"markdownRemark":{"html":"<p>Let's start by getting a sense of the lay of the land. Redux, for all of its power, has a relatively small API footprint.</p>\n<ul>\n<li><code class=\"language-text\">applyMiddleware</code></li>\n<li><code class=\"language-text\">bindActionCreators</code></li>\n<li><code class=\"language-text\">combineReducers</code></li>\n<li><code class=\"language-text\">compose</code></li>\n<li><code class=\"language-text\">createStore</code></li>\n</ul>\n<p>Yup, just five functions. We'll discuss each of this in due time. We'll start with one of the simple utility methods that come along with Redux.</p>\n<h2 id=\"compose\" style=\"position:relative;\"><a href=\"#compose\" aria-label=\"compose permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">compose</code></h2>\n<p>If we want to split hairs. It's actually less than that. <code class=\"language-text\">compose()</code> isn't exactly Redux-specific. It's just a helper function. <code class=\"language-text\">compose</code> takes a series of functions as arguments and returns a new function that applies each those functions from right-to-left (or, from last-to-first if you're like me and have trouble discerning right from left).</p>\n<p>Let's say that we had a bunch of functions that each take a string and return a modified string.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">makeLouder</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> string<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">repeatThreeTimes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> string<span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">embolden</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> string<span class=\"token punctuation\">.</span><span class=\"token function\">bold</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>(Yea, I just learned that some of those methods exist too.)</p>\n<p>We <em>could</em> call them all like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">embolden</span><span class=\"token punctuation\">(</span><span class=\"token function\">repeatThreeTimes</span><span class=\"token punctuation\">(</span><span class=\"token function\">makeLouder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>But, what if I wanted to pass this combined function around as an argument to another function or method? I'd have to do something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">makeLouderAndBoldAndRepeatThreeTimes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token function\">embolden</span><span class=\"token punctuation\">(</span><span class=\"token function\">repeatThreeTimes</span><span class=\"token punctuation\">(</span><span class=\"token function\">makeLouder</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This is tedious. <code class=\"language-text\">compose</code> gives us a simple way to <em>compose</em> functions out of other functions.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> makeLouderAndBoldAndRepeatThreeTimes <span class=\"token operator\">=</span> redux<span class=\"token punctuation\">.</span><span class=\"token function\">compose</span><span class=\"token punctuation\">(</span>\n  embolden<span class=\"token punctuation\">,</span>\n  repeatThreeTimes<span class=\"token punctuation\">,</span>\n  makeLouder\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You'll see a similiar utility in other libraries like <a href=\"https://lodash.com/docs/4.17.15#flow\">Lodash</a> and <a href=\"https://ramdajs.com/docs/#compose\">Ramda</a>.</p>\n<p>This is used as a helper when creating enhancers, which we'll talk about in the production-grade Redux workshop. For now, I'm just fulfilling my promises of demystifying the core API.</p>","frontmatter":{"path":"/welcome","title":"Redux's API","order":"2A","section":"Redux Without React","description":"Getting Comfortable With Redux By Itself"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"2G","path":"/middleware-and-enhancers","title":"Middleware and Enhancers"}}},{"node":{"frontmatter":{"order":"2E","path":"/bind-action-creators","title":"Bind Action Creators"}}},{"node":{"frontmatter":{"order":"2F","path":"/combine-reducers","title":"Combine Reducers"}}},{"node":{"frontmatter":{"order":"2B","path":"/create-store","title":"Redux Stores and Reducers"}}},{"node":{"frontmatter":{"order":"2C","path":"/stores-and-dispatch","title":"Redux Stores and Dispatch"}}},{"node":{"frontmatter":{"order":"2A","path":"/welcome","title":"Redux's API"}}},{"node":{"frontmatter":{"order":"2D","path":"/subscribing-to-the-store","title":"Subscring to Store Changes"}}},{"node":{"frontmatter":{"order":"4G","path":"/deriving-data","title":"Deriving Data"}}},{"node":{"frontmatter":{"order":"4A","path":"/connect","title":"Using the Connect API"}}},{"node":{"frontmatter":{"order":"4C","path":"/map-dispatch-to-props","title":"mapDispatchToProps"}}},{"node":{"frontmatter":{"order":"4B","path":"/map-state-to-props","title":"mapStateToProps"}}},{"node":{"frontmatter":{"order":"4E","path":"/removing-an-item","title":"Removing an Item"}}},{"node":{"frontmatter":{"order":"4D","path":"/connect-taskmaster","title":"Adding Connect to Taskmaster (Exercise)"}}},{"node":{"frontmatter":{"order":"4F","path":"/updating-price-and-quantity","title":"Updating Price and Quantity"}}},{"node":{"frontmatter":{"order":"3I","path":"/abstracting-hooks","title":"Abstracting Logic Into a Custom Hook"}}},{"node":{"frontmatter":{"order":"3C","path":"/redux-dev-tools","title":"Adding the Redux Dev Tools"}}},{"node":{"frontmatter":{"order":"3F","path":"/exercise-react-redux-hooks","title":"Exercise: Adding SetCounter"}}},{"node":{"frontmatter":{"order":"3E","path":"/hooking-up-dispatch","title":"Hooking Up Dispatch"}}},{"node":{"frontmatter":{"order":"3D","path":"/hooking-up-state","title":"Hooking Up State"}}},{"node":{"frontmatter":{"order":"3B","path":"/introduction-to-react-redux","title":"Introductiton to React Redux"}}},{"node":{"frontmatter":{"order":"3G","path":"/solution-react-redux-hooks","title":"Solution: Adding SetCounter"}}},{"node":{"frontmatter":{"order":"3H","path":"/use-actions","title":"Binding Actions"}}},{"node":{"frontmatter":{"order":"3A","path":"/basic-redux-functionality","title":"Implementing the Basic Logic"}}},{"node":{"frontmatter":{"order":"6B","path":"/immer","title":"Using Immer with an Entire Reducer"}}},{"node":{"frontmatter":{"order":"6A","path":"/immer","title":"Mutable Immutable State with Immer"}}},{"node":{"frontmatter":{"order":"1A","path":"/welcome","title":"Welcome and Introduction"}}},{"node":{"frontmatter":{"order":"5A","path":"/reselect","title":"Computing Data with Reselect"}}},{"node":{"frontmatter":{"order":"5B","path":"/reselect-exercise","title":"Using Props with Reselect"}}}]}},"pageContext":{}},"staticQueryHashes":["2959687377"]}